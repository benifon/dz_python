# 1. Выяснить тип результата выражений:
# 15 * 3
# 15 / 3
# 15 // 2
# 15 ** 2

multiplication = 15 * 3
division = 15 / 3
part_after_division = 15 // 2
exponentiation = 15 ** 2

print(type(multiplication))
print(type(division))
print(type(part_after_division))
print(type(exponentiation))

# 2.
#  Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное: дополнить числа до двух разрядов нулём!
# 3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала показаться.


list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
new_list = []

for num in list:
    if num.isdigit():
        new_list.extend(['"', f'{int(num):02}', '"'])
    elif (num.startswith('+') or num.startswith(' - ')) and num[1:].isdigit():
        new_list.extend(['"', f' {num[0]} {int(num[1:]):02}', '"'])
    else:
        new_list.append(num)

print(new_list)
out_info = ' '.join(new_list)
print(out_info)

# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
# Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?

name_list = ['инженер-конструктор Игорь',
             'главный бухгалтер МАРИНА',
             'токарь высшего разряда нИКОЛАй',
             'директор Аэлита']
# print(len(name_list))
for personal in name_list:
    print(f'Привет, {personal.split(" ")[-1].title()}! ')

# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
# Вывести на экран эти цены через запятую в одну строку, цена должна отобSражаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).

price = [57.8, 46.51, 97, 99, 33.2, 24.90, 82, 44, 33.3, 456]

for num in price:
    rub = int(num)
    kk = (num - int(num)) * 100
    print(f'{rub} руб {kk:02.0f} коп', end='\n')
print(id(price))

# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).

price = [57.8, 46.51, 97, 99, 33.2, 24.90, 82, 44, 33.3, 456]
print(price)
print(id(price))
print(sorted(price))
print(id(price))

# Создать новый список, содержащий те же цены, но отсортированные по убыванию.

price = [57.8, 46.51, 97, 99, 33.2, 24.90, 82, 44, 33.3, 456]
price.sort(reverse=True)
print(price)

# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
# Задачи со * предназначены для продвинутых учеников, которым мало сделать обычное задание.

price = [57.8, 46.51, 97, 99, 33.2, 24.90, 82, 44, 33.3, 456]
print(sorted(price,reverse= True)[0:5])


